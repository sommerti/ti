<!-- user searches for a destination that could be a country, region or city -->
<div class="search-stop">
	<h1>Add A Stop To "<%= @trip.name %>"</h1>
		<%= form_tag trip_search_stop_path(@trip), class: "form-inline", method: :get do %>
    	<%= text_field_tag :search, params[:search], class: "form-control margin-search-action" %>
        <%= submit_tag "Search", class: "btn btn-primary btn-sm margin-search-action" %>
	<% end %>
</div>

<% if params[:search].blank? %>
<br>
<h3 class="show_number_stops">Currently <%= pluralize(@trip.stops.size, 'stop') %> on this trip:</h3>
<!-- <table class="table table-stops"> -->
<ol>
	<%= render @trip.stops.order("CREATED_AT ASC") %>
</ol>
<% end %>

<!-- return search result -->
<div class="search-results">
	<% if params[:search] %>
		<h4>Search results returned:</h4>
		<%= render 'trips/search_results' %>
	<% end %>
</div>



<!-- google map script -->
<script>

<% if !@city_results.blank? %>
	handler_city_results = Gmaps.build('Google');
	handler_city_results.buildMap({ provider: {}, internal: {id: 'map_city_results'}}, function(){
	  markers = handler_city_results.addMarkers(<%= @hash_city_results.to_json.html_safe %>);
	  
		<% if @city_results.size == 1 %>
			// to center on a marker
			handler_city_results.map.centerOn(markers[0]); 
			// to set the map zoom
			handler_city_results.getMap().setZoom(4);
		<% else %>
	  		handler_city_results.bounds.extendWith(markers);
	  		handler_city_results.fitMapToBounds();
	  	<% end %>

	});
<% end %>

</script>